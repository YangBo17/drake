load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:pybind.bzl",
    "add_pybind_coverage_data",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_unittest",
)
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

<<<<<<< HEAD
=======
drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = [
        "//bindings/pydrake:module_py",
    ],
)

# 2023-06-01 Remove this target upon completion of deprecation.
drake_py_library(
    name = "planner_py",
    srcs = ["planner.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = ["//bindings/pydrake/multibody:inverse_kinematics_py"],
)

>>>>>>> 65b76e12737b188b94fc473aa3d3c4fb4fea5a0f
drake_pybind_library(
    name = "manipulation",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
        "//bindings/pydrake/common:serialize_pybind",
    ],
    cc_so_name = "__init__",
    cc_srcs = [
        "manipulation_py.h",
        "manipulation_py.cc",
        "manipulation_py_kuka_iiwa.cc",
        "manipulation_py_schunk_wsg.cc",
        "manipulation_py_util.cc",
    ],
    package_info = PACKAGE_INFO,
    py_deps = [
        "//bindings/pydrake/systems:framework_py",
        # 2023-06-01 Remove this dependency upon completion of deprecation.
        "//bindings/pydrake/multibody:inverse_kinematics_py",
    ],
    py_srcs = [
        "_manipulation_extra.py",
        # 2023-06-01 Remove this target upon completion of deprecation.
        "planner.py",
        # TODO(jwnimmer-tri) On 2023-06-01 add deprecation for these modules.
        # See #18683 for an example of what to do.
        "kuka_iiwa.py",
        "schunk_wsg.py",
        "util.py",
    ],
)

<<<<<<< HEAD
=======
drake_pybind_library(
<<<<<<< HEAD
    name = "planner_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
    ],
    cc_srcs = ["planner_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

drake_pybind_library(
=======
>>>>>>> 65b76e12737b188b94fc473aa3d3c4fb4fea5a0f
    name = "schunk_wsg_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
    ],
    cc_srcs = ["schunk_wsg_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

PY_LIBRARIES_WITH_INSTALL = [
    ":kuka_iiwa_py",
    ":schunk_wsg_py",
]

PY_LIBRARIES = [
    ":module_py",
    ":planner_py",
]

>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
drake_py_unittest(
    name = "kuka_iiwa_test",
    data = [
        "//manipulation/models/iiwa_description:models",
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":manipulation",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
)

drake_py_unittest(
    name = "planner_deprecated_test",
    deps = [
<<<<<<< HEAD
        ":manipulation",
=======
        ":planner_py",
>>>>>>> 65b76e12737b188b94fc473aa3d3c4fb4fea5a0f
        "//bindings/pydrake/common/test_utilities:deprecation_py",
    ],
)

drake_py_unittest(
    name = "schunk_wsg_test",
    data = [
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":manipulation",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
)

<<<<<<< HEAD
drake_py_unittest(
    name = "util_test",
    data = [
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":manipulation",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
=======
# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES_WITH_INSTALL + PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "manipulation",
    deps = [":all_py"],
>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
)

install(
    name = "install",
    targets = [":manipulation"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs([":manipulation"]),
)

add_pybind_coverage_data()

add_lint_tests_pydrake()
