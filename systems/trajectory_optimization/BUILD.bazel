# TODO(SeanCurtis-TRI): 2023-05-01 this entire directory tree gets removed
# upon completion of deprecation period.

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "trajectory_optimization",
    visibility = ["//visibility:public"],
    deps = [
        ":direct_collocation",
        ":direct_transcription",
        ":integration_constraint",
        ":kinematic_trajectory_optimization",
        ":multiple_shooting",
        ":sequential_expression_manager",
    ],
)

_STUB_HDRS = [
    "direct_collocation.h",
    "direct_transcription.h",
    "integration_constraint.h",
    "kinematic_trajectory_optimization.h",
    "multiple_shooting.h",
    "sequential_expression_manager.h",
]

[
    genrule(
        name = "_cp_" + hdr,
        srcs = ["stub/" + hdr],
        outs = [hdr],
        cmd = "cp $< $@",
        tags = ["nolint"],
        visibility = ["//visibility:private"],
    )
    for hdr in _STUB_HDRS
]

drake_cc_library(
    name = "sequential_expression_manager",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:sequential_expression_manager instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        "//common:essential",
<<<<<<< HEAD
        "//planning/trajectory_optimization:sequential_expression_manager",
=======
        "//common:unused",
        "//common/symbolic:expression",
>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
    ],
)

drake_cc_library(
    name = "multiple_shooting",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:multiple_shooting instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        ":sequential_expression_manager",
        "//common:essential",
        "//planning/trajectory_optimization:multiple_shooting",
    ],
)

drake_cc_library(
    name = "direct_collocation",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:direct_collocation instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        ":multiple_shooting",
        "//common:essential",
        "//planning/trajectory_optimization:direct_collocation",
    ],
)

drake_cc_library(
    name = "direct_transcription",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:direct_transcription instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        ":multiple_shooting",
<<<<<<< HEAD
        "//common:essential",
        "//planning/trajectory_optimization:direct_transcription",
    ],
)

drake_cc_library(
    name = "kinematic_trajectory_optimization",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:kinematic_trajectory_optimization instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        "//common:essential",
        "//planning/trajectory_optimization:kinematic_trajectory_optimization",
=======
        "//common/symbolic:polynomial",
        "//common/trajectories:piecewise_polynomial",
        "//math:autodiff",
        "//math:gradient",
        "//systems/analysis:explicit_euler_integrator",
        "//systems/analysis:integrator_base",
        "//systems/framework",
        "//systems/primitives:linear_system",
>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
    ],
)

drake_cc_library(
    name = "integration_constraint",
    hdrs = _STUB_HDRS,
    deprecation = "This label is deprecated and will be removed from Drake on 2023-05-01; as a replacement, use //planning/trajectory_optimization:integration_constraint instead.",  # noqa
    tags = [
        "manual",
        "nolint",
    ],
    deps = [
        "//common:essential",
        "//planning/trajectory_optimization:integration_constraint",
    ],
)

# === test/ ===

# TODO(SeanCurtis-TRI): 2023-05-01 remove along with deprecation.
drake_cc_googletest(
<<<<<<< HEAD
    name = "deprecation_test",
    copts = [
        "-Wno-cpp",
        "-Wno-deprecated-declarations",
    ],
    data = [
        "//manipulation/models/iiwa_description:models",
=======
    name = "multiple_shooting_test",
    deps = [
        ":multiple_shooting",
        "//common/test_utilities:eigen_matrix_compare",
        "//solvers:osqp_solver",
        "//solvers:solve",
>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
    ],
    deps = [
        ":trajectory_optimization",
        "//common/trajectories:piecewise_polynomial",
        "//systems/primitives:linear_system",
    ],
)
<<<<<<< HEAD
=======

drake_cc_googletest(
    name = "direct_transcription_test",
    data = ["//examples/pendulum:prod_models"],
    # This test has two duplicated long cases; run them in parallel.
    shard_count = 4,
    deps = [
        ":direct_transcription",
        "//common/test_utilities:eigen_matrix_compare",
        "//multibody/parsing",
        "//multibody/plant",
        "//solvers:snopt_solver",
        "//solvers:solve",
        "//systems/primitives:symbolic_vector_system",
        "//systems/primitives:trajectory_linear_system",
    ],
)

drake_cc_googletest(
    name = "sequential_expression_manager_test",
    deps = [
        ":sequential_expression_manager",
        "//common/test_utilities:expect_throws_message",
        "@fmt",
    ],
)

drake_cc_googletest(
    name = "integration_constraint_test",
    deps = [
        ":integration_constraint",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:gradient",
    ],
)

add_lint_tests()
>>>>>>> 39291320815eca6c872c9ce0a595d643d0acf87c
